// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file project.proto (package project, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddMethodRequest, AddMethodResponse, CreateProjectRequest, CreateProjectResponse, DeleteProjectRequest, DeleteProjectResponse, ExportProjectRequest, ExportProjectResponse, GenerateAIStubRequest, GenerateAIStubResponse, GetGRPCServerInfoRequest, GetGRPCServerInfoResponse, GetNodeInfoRequest, GetNodeInfoResponse, GetProjectRequest, GetProjectResponse, GetProjectsRequest, GetProjectsResponse, GetProjectTypesRequest, GetProvidersRequest, GetProvidersResponse, GetRunningWorkflowResponse, GetRunningWorkflowsRequest, GetWorkflowRunsRequest, GetWorkflowRunsResponse, LoadProjectRequest, LoadProjectResponse, NewNodeRequest, NewNodeResponse, NodeExecution, ProjectTypes, RunGRPCMethodRequest, RunWorkflowRequest, SaveProjectRequest, SaveProjectResponse, StopWorkflowRequest, StopWorkflowResponse } from "./project_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service project.ProjectService
 */
export const ProjectService = {
  typeName: "project.ProjectService",
  methods: {
    /**
     * @generated from rpc project.ProjectService.AddMethod
     */
    addMethod: {
      name: "AddMethod",
      I: AddMethodRequest,
      O: AddMethodResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.CreateProject
     */
    createProject: {
      name: "CreateProject",
      I: CreateProjectRequest,
      O: CreateProjectResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.DeleteProject
     */
    deleteProject: {
      name: "DeleteProject",
      I: DeleteProjectRequest,
      O: DeleteProjectResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.EnumerateProviders
     */
    enumerateProviders: {
      name: "EnumerateProviders",
      I: GetProvidersRequest,
      O: GetProvidersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.ExportProject
     */
    exportProject: {
      name: "ExportProject",
      I: ExportProjectRequest,
      O: ExportProjectResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.GenerateAIStub
     */
    generateAIStub: {
      name: "GenerateAIStub",
      I: GenerateAIStubRequest,
      O: GenerateAIStubResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.GetGRPCServerInfo
     */
    getGRPCServerInfo: {
      name: "GetGRPCServerInfo",
      I: GetGRPCServerInfoRequest,
      O: GetGRPCServerInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.GetNodeInfo
     */
    getNodeInfo: {
      name: "GetNodeInfo",
      I: GetNodeInfoRequest,
      O: GetNodeInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.GetProject
     */
    getProject: {
      name: "GetProject",
      I: GetProjectRequest,
      O: GetProjectResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.GetProjectTypes
     */
    getProjectTypes: {
      name: "GetProjectTypes",
      I: GetProjectTypesRequest,
      O: ProjectTypes,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.GetProjects
     */
    getProjects: {
      name: "GetProjects",
      I: GetProjectsRequest,
      O: GetProjectsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.GetRunningWorkflows
     */
    getRunningWorkflows: {
      name: "GetRunningWorkflows",
      I: GetRunningWorkflowsRequest,
      O: GetRunningWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.GetWorkflowRuns
     */
    getWorkflowRuns: {
      name: "GetWorkflowRuns",
      I: GetWorkflowRunsRequest,
      O: GetWorkflowRunsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.LoadProject
     */
    loadProject: {
      name: "LoadProject",
      I: LoadProjectRequest,
      O: LoadProjectResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.NewNode
     */
    newNode: {
      name: "NewNode",
      I: NewNodeRequest,
      O: NewNodeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.RunGRPCMethod
     */
    runGRPCMethod: {
      name: "RunGRPCMethod",
      I: RunGRPCMethodRequest,
      O: NodeExecution,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc project.ProjectService.RunWorkflow
     */
    runWorkflow: {
      name: "RunWorkflow",
      I: RunWorkflowRequest,
      O: NodeExecution,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc project.ProjectService.SaveProject
     */
    saveProject: {
      name: "SaveProject",
      I: SaveProjectRequest,
      O: SaveProjectResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc project.ProjectService.StopWorkflow
     */
    stopWorkflow: {
      name: "StopWorkflow",
      I: StopWorkflowRequest,
      O: StopWorkflowResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

