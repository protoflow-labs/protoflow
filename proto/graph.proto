syntax = "proto3";

import "grpc/grpc.proto";
import "reason/reason.proto";
import "data/data.proto";
import "http/http.proto";
import "storage/storage.proto";
import "code/code.proto";

package graph;
option go_package = "graph";

message Graph {
  repeated Node nodes = 1;
  repeated Edge edges = 2;
}

message Node {
  string id = 1;
  string name = 2;
  float x = 4;
  float y = 5;

  oneof type {
    data.Data data = 7;
    reason.Reason reason = 8;
    grpc.GRPC grpc = 9;
    http.HTTP http = 10;
    storage.Storage storage = 11;
    code.Code code = 12;
  }
}

// TODO breadchris message NodeInstance { node_id, name, x, y } for displaying

message CodeAdapter {
  string code = 1;
}

message Provides {}

message Edge {
   string id = 1;
   string from = 2;
   string to = 3;

   oneof type {
     CodeAdapter code_adapter = 4;
     Provides provides = 5;
   }
}
