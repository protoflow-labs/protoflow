// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: graph.proto

package gen

import (
	code "github.com/protoflow-labs/protoflow/gen/code"
	data "github.com/protoflow-labs/protoflow/gen/data"
	grpc "github.com/protoflow-labs/protoflow/gen/grpc"
	http "github.com/protoflow-labs/protoflow/gen/http"
	reason "github.com/protoflow-labs/protoflow/gen/reason"
	storage "github.com/protoflow-labs/protoflow/gen/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Graph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges []*Edge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *Graph) Reset() {
	*x = Graph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Graph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Graph) ProtoMessage() {}

func (x *Graph) ProtoReflect() protoreflect.Message {
	mi := &file_graph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Graph.ProtoReflect.Descriptor instead.
func (*Graph) Descriptor() ([]byte, []int) {
	return file_graph_proto_rawDescGZIP(), []int{0}
}

func (x *Graph) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Graph) GetEdges() []*Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	X    float32 `protobuf:"fixed32,4,opt,name=x,proto3" json:"x,omitempty"`
	Y    float32 `protobuf:"fixed32,5,opt,name=y,proto3" json:"y,omitempty"`
	// Types that are assignable to Type:
	//
	//	*Node_Data
	//	*Node_Reason
	//	*Node_Grpc
	//	*Node_Http
	//	*Node_Storage
	//	*Node_Code
	Type isNode_Type `protobuf_oneof:"type"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_graph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_graph_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Node) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (m *Node) GetType() isNode_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Node) GetData() *data.Data {
	if x, ok := x.GetType().(*Node_Data); ok {
		return x.Data
	}
	return nil
}

func (x *Node) GetReason() *reason.Reason {
	if x, ok := x.GetType().(*Node_Reason); ok {
		return x.Reason
	}
	return nil
}

func (x *Node) GetGrpc() *grpc.GRPC {
	if x, ok := x.GetType().(*Node_Grpc); ok {
		return x.Grpc
	}
	return nil
}

func (x *Node) GetHttp() *http.HTTP {
	if x, ok := x.GetType().(*Node_Http); ok {
		return x.Http
	}
	return nil
}

func (x *Node) GetStorage() *storage.Storage {
	if x, ok := x.GetType().(*Node_Storage); ok {
		return x.Storage
	}
	return nil
}

func (x *Node) GetCode() *code.Code {
	if x, ok := x.GetType().(*Node_Code); ok {
		return x.Code
	}
	return nil
}

type isNode_Type interface {
	isNode_Type()
}

type Node_Data struct {
	Data *data.Data `protobuf:"bytes,7,opt,name=data,proto3,oneof"`
}

type Node_Reason struct {
	Reason *reason.Reason `protobuf:"bytes,8,opt,name=reason,proto3,oneof"`
}

type Node_Grpc struct {
	Grpc *grpc.GRPC `protobuf:"bytes,9,opt,name=grpc,proto3,oneof"`
}

type Node_Http struct {
	Http *http.HTTP `protobuf:"bytes,10,opt,name=http,proto3,oneof"`
}

type Node_Storage struct {
	Storage *storage.Storage `protobuf:"bytes,11,opt,name=storage,proto3,oneof"`
}

type Node_Code struct {
	Code *code.Code `protobuf:"bytes,12,opt,name=code,proto3,oneof"`
}

func (*Node_Data) isNode_Type() {}

func (*Node_Reason) isNode_Type() {}

func (*Node_Grpc) isNode_Type() {}

func (*Node_Http) isNode_Type() {}

func (*Node_Storage) isNode_Type() {}

func (*Node_Code) isNode_Type() {}

type CodeAdapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CodeAdapter) Reset() {
	*x = CodeAdapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeAdapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeAdapter) ProtoMessage() {}

func (x *CodeAdapter) ProtoReflect() protoreflect.Message {
	mi := &file_graph_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeAdapter.ProtoReflect.Descriptor instead.
func (*CodeAdapter) Descriptor() ([]byte, []int) {
	return file_graph_proto_rawDescGZIP(), []int{2}
}

func (x *CodeAdapter) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Provides struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Provides) Reset() {
	*x = Provides{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provides) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provides) ProtoMessage() {}

func (x *Provides) ProtoReflect() protoreflect.Message {
	mi := &file_graph_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provides.ProtoReflect.Descriptor instead.
func (*Provides) Descriptor() ([]byte, []int) {
	return file_graph_proto_rawDescGZIP(), []int{3}
}

type Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	// Types that are assignable to Type:
	//
	//	*Edge_CodeAdapter
	//	*Edge_Provides
	Type isEdge_Type `protobuf_oneof:"type"`
}

func (x *Edge) Reset() {
	*x = Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edge) ProtoMessage() {}

func (x *Edge) ProtoReflect() protoreflect.Message {
	mi := &file_graph_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edge.ProtoReflect.Descriptor instead.
func (*Edge) Descriptor() ([]byte, []int) {
	return file_graph_proto_rawDescGZIP(), []int{4}
}

func (x *Edge) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Edge) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Edge) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (m *Edge) GetType() isEdge_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Edge) GetCodeAdapter() *CodeAdapter {
	if x, ok := x.GetType().(*Edge_CodeAdapter); ok {
		return x.CodeAdapter
	}
	return nil
}

func (x *Edge) GetProvides() *Provides {
	if x, ok := x.GetType().(*Edge_Provides); ok {
		return x.Provides
	}
	return nil
}

type isEdge_Type interface {
	isEdge_Type()
}

type Edge_CodeAdapter struct {
	CodeAdapter *CodeAdapter `protobuf:"bytes,4,opt,name=code_adapter,json=codeAdapter,proto3,oneof"`
}

type Edge_Provides struct {
	Provides *Provides `protobuf:"bytes,5,opt,name=provides,proto3,oneof"`
}

func (*Edge_CodeAdapter) isEdge_Type() {}

func (*Edge_Provides) isEdge_Type() {}

var File_graph_proto protoreflect.FileDescriptor

var file_graph_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x1a, 0x0f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x68, 0x74, 0x74,
	0x70, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x05, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x21, 0x0a,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64,
	0x67, 0x65, 0x73, 0x22, 0xae, 0x02, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x20, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x52,
	0x50, 0x43, 0x48, 0x00, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x12, 0x20, 0x0a, 0x04, 0x68, 0x74,
	0x74, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x48, 0x54, 0x54, 0x50, 0x48, 0x00, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x2c, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a, 0x0b, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x0a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x37, 0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f,
	0x64, 0x65, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x73, 0x48, 0x00, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x74, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x42, 0x0a, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x27, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x66, 0x6c, 0x6f,
	0x77, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x66, 0x6c, 0x6f, 0x77,
	0x2f, 0x67, 0x65, 0x6e, 0xa2, 0x02, 0x03, 0x47, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x47, 0x72, 0x61,
	0x70, 0x68, 0xca, 0x02, 0x05, 0x47, 0x72, 0x61, 0x70, 0x68, 0xe2, 0x02, 0x11, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x05, 0x47, 0x72, 0x61, 0x70, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_graph_proto_rawDescOnce sync.Once
	file_graph_proto_rawDescData = file_graph_proto_rawDesc
)

func file_graph_proto_rawDescGZIP() []byte {
	file_graph_proto_rawDescOnce.Do(func() {
		file_graph_proto_rawDescData = protoimpl.X.CompressGZIP(file_graph_proto_rawDescData)
	})
	return file_graph_proto_rawDescData
}

var file_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_graph_proto_goTypes = []interface{}{
	(*Graph)(nil),           // 0: graph.Graph
	(*Node)(nil),            // 1: graph.Node
	(*CodeAdapter)(nil),     // 2: graph.CodeAdapter
	(*Provides)(nil),        // 3: graph.Provides
	(*Edge)(nil),            // 4: graph.Edge
	(*data.Data)(nil),       // 5: data.Data
	(*reason.Reason)(nil),   // 6: reason.Reason
	(*grpc.GRPC)(nil),       // 7: grpc.GRPC
	(*http.HTTP)(nil),       // 8: http.HTTP
	(*storage.Storage)(nil), // 9: storage.Storage
	(*code.Code)(nil),       // 10: code.Code
}
var file_graph_proto_depIdxs = []int32{
	1,  // 0: graph.Graph.nodes:type_name -> graph.Node
	4,  // 1: graph.Graph.edges:type_name -> graph.Edge
	5,  // 2: graph.Node.data:type_name -> data.Data
	6,  // 3: graph.Node.reason:type_name -> reason.Reason
	7,  // 4: graph.Node.grpc:type_name -> grpc.GRPC
	8,  // 5: graph.Node.http:type_name -> http.HTTP
	9,  // 6: graph.Node.storage:type_name -> storage.Storage
	10, // 7: graph.Node.code:type_name -> code.Code
	2,  // 8: graph.Edge.code_adapter:type_name -> graph.CodeAdapter
	3,  // 9: graph.Edge.provides:type_name -> graph.Provides
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_graph_proto_init() }
func file_graph_proto_init() {
	if File_graph_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_graph_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Graph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeAdapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provides); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_graph_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Node_Data)(nil),
		(*Node_Reason)(nil),
		(*Node_Grpc)(nil),
		(*Node_Http)(nil),
		(*Node_Storage)(nil),
		(*Node_Code)(nil),
	}
	file_graph_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Edge_CodeAdapter)(nil),
		(*Edge_Provides)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_graph_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_graph_proto_goTypes,
		DependencyIndexes: file_graph_proto_depIdxs,
		MessageInfos:      file_graph_proto_msgTypes,
	}.Build()
	File_graph_proto = out.File
	file_graph_proto_rawDesc = nil
	file_graph_proto_goTypes = nil
	file_graph_proto_depIdxs = nil
}
